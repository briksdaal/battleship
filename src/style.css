@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");

:root {
  font-size: 18px;
  --cell: 40px;
  --border: 2px;
  --board-gap: 300px;
  --padding: 60px;
}

* {
  padding: 0;
  margin: 0;
  font-family: "Roboto", sans-serif;
  box-sizing: border-box;
}

.main {
  display: flex;
  flex-direction: column;
  padding-top: 40px;
  min-height: 100vh;
  overflow-x: hidden;
}

.heading-container {
  text-align: center;
}

.main-heading {
  font-size: 3rem;
}

.heading-container {
  padding-bottom: var(--padding);
}

.boards-container {
  display: flex;
  gap: var(--board-gap);
  justify-content: center;
  padding-bottom: var(--padding);
  transition: transform 0.3s ease-out;
}

.placement .boards-container {
  transform: translateX(
    calc((var(--border) * 11 + var(--cell) * 10 + var(--board-gap)) / 2)
  );
}

.boards-container h3 {
  font-size: 1.5rem;
  text-align: center;
  padding-bottom: 16px;
}

.user-container {
  position: relative;
  text-align: center;
}

.opponent-container {
  text-align: center;
  opacity: 1;
  transition: opacity 0.5s;
  transition-delay: 0.2s;
}

.placement .opponent-container {
  opacity: 0;
}

.status-container {
  flex: 1;
  text-align: center;
  padding-bottom: var(--padding);
}

.status-container h2 {
  padding-bottom: 8px;
}

.footer {
  padding: 8px 0;
  text-align: center;
  background: grey;
  color: white;
}

.footer svg {
  fill: white;
}

.board {
  display: inline-grid;
  grid-template-columns: repeat(10, var(--cell));
  grid-template-rows: repeat(10, var(--cell));
  gap: var(--border);
  background-color: black;
  border: var(--border) solid black;
}

.game-over .board {
  opacity: 0.5;
}

.cell {
  background: white;
  cursor: pointer;
}

.cell.ship {
  background: green;
  cursor: auto;
}

.cell.hit {
  background: red;
  cursor: auto;
}

.cell.miss {
  background: grey;
  cursor: auto;
}

.cell.revealed {
  background: rgb(209, 209, 209);
  cursor: auto;
}

.placement .user-container .cell {
  cursor: pointer;
}

.active-game .user-container .cell {
  cursor: auto;
}

.game-over .opponent-container .cell{
  cursor: auto;
}

.rotation-btn {
  position: absolute;
  border: none;
  background: none;
  font-size: 3rem;
  cursor: pointer;
  right: -60px;
  top: 208px;
}

.play-again-btn {
  border: 0;
  background: #e5e5e5;
  padding: 8px 16px;
  font-size: 1rem;
  margin-top: 16px;
  border-radius: 5px;
  cursor: pointer;
}

.play-again-btn:hover {
  background: #c1c1c1;
}

@media only screen and (max-width: 1200px) {
  :root {
    --board-gap: 60px;
  }

  .boards-container {
    order: 2;
  }

  .footer {
    order: 4;
  }
}

@media only screen and (max-width: 960px) {
  .boards-container {
    transition: unset;
    flex-direction: column;
  }

  .placement .boards-container {
    transform: unset;
  }

  .opponent-container {
    opacity: 1;
    transition: unset;
  }

  .placement .opponent-container {
    opacity: 1;
  }

  .rotation-btn {
    left: calc(100vw / 2 + 140px);
    top: -14px;
    right: unset;
  }
}

@media only screen and (max-width: 500px) {
  :root {
    --cell: 30px;
    --padding: 30px;
  }

  .rotation-btn {
    left: calc(100vw / 2 + 100px);
    top: -4px;
    font-size: 2rem;
  }
}

@media only screen and (max-width: 410px) {
  :root {
    --cell: 25px;
  }

  .status-rotate-text {
    width: 340px;
    margin: 0 auto;
  }
}
